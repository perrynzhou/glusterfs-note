#!/bin/bash
#
# Copyright(c) 2012-2019 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause-Clear
#

. $(dirname $3)/conf_framework

check() {
	cur_name=$(basename $2)
	config_file_path=$1
	if compile_module $cur_name "WRITE_FLUSH" "linux/fs.h"
	then
		if compile_module $cur_name "BIO_FLUSH" "linux/bio.h"
		then
			echo $cur_name "1" >> $config_file_path
		else
			echo $cur_name "2" >> $config_file_path
		fi
	elif compile_module $cur_name "REQ_PREFLUSH" "linux/blk_types.h"
	then
		echo $cur_name "3" >> $config_file_path
	else
		echo $cur_name "4" >> $config_file_path
    fi
}

apply() {
    case "$1" in
    "1")
		add_define "CAS_RQ_IS_FLUSH(rq) \\
			((rq)->cmd_flags & CAS_REQ_FLUSH)"
		add_define "CAS_WRITE_FLUSH \\
			WRITE_FLUSH"
		add_define "CAS_IS_WRITE_FLUSH(flags) \\
			((flags) & BIO_FLUSH)" ;;
    "2")
		add_define "CAS_RQ_IS_FLUSH(rq) \\
			((rq)->cmd_flags & CAS_REQ_FLUSH)"
		add_define "CAS_WRITE_FLUSH \\
			WRITE_FLUSH"
		add_define "CAS_IS_WRITE_FLUSH(flags) \\
			((flags) & CAS_REQ_FLUSH)" ;;
	"3")
		add_define "CAS_RQ_IS_FLUSH(rq) \\
			((rq)->cmd_flags & REQ_PREFLUSH)"
		add_define "CAS_WRITE_FLUSH \\
			(REQ_OP_WRITE | REQ_PREFLUSH)"
		add_define "CAS_IS_WRITE_FLUSH(flags) \\
			(CAS_WRITE_FLUSH == ((flags) & CAS_WRITE_FLUSH))" ;;
	"4")
		add_define "CAS_RQ_IS_FLUSH(rq) \\
			0"
		add_define "CAS_IS_WRITE_FLUSH(flags) \\
			(WRITE_BARRIER == ((flags) & WRITE_BARRIER))"
		add_define "CAS_WRITE_FLUSH \\
			WRITE_BARRIER" ;;
    *)
        exit 1
    esac
}

conf_run $@
